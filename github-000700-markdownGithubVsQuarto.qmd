<!-- 
This was generated by claude.ai
TOPIC: markdown - github vs quarto
URL: https://claude.ai/chat/a8c9e037-eb72-43c3-b431-62c70502fd76
-->

# GitHub Markdown vs. Quarto (.qmd) Comparison {#sec-comparison}

This page was generated by AI (after some back and forth prompting). 
I didn't check the contents for accuracy (yet).

-YR

## Feature Comparison Tables {#sec-feature-tables}

### Features Supported by Both GitHub and Quarto {#sec-both-features}

```{=html}
<table class="table">
  <thead>
    <tr>
      <th>Feature</th>
      <th>GitHub Markdown</th>
      <th>Quarto (.qmd)</th>
      <th>Notes</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Basic Markdown</strong></td>
      <td>✅</td>
      <td>✅</td>
      <td>Standard Markdown syntax (headers, lists, links, etc.)</td>
    </tr>
    <tr>
      <td><strong>YAML Front Matter</strong></td>
      <td>⚠️ Basic support <a href="#sec-note1">(click here for more info)</a></td>
      <td>✅ Extensive support</td>
      <td>Used for metadata and document configuration</td>
    </tr>
    <tr>
      <td><strong>Math Notation</strong></td>
      <td>⚠️ Basic LaTeX <a href="#sec-note2">(click here for more info)</a></td>
      <td>✅ Advanced LaTeX</td>
      <td>Mathematical equations and formulas</td>
    </tr>
    <tr>
      <td><strong>Task Lists</strong></td>
      <td>✅ Advanced</td>
      <td>⚠️ Basic support <a href="#sec-note4">(click here for more info)</a></td>
      <td>Checkboxes for task items</td>
    </tr>
    <tr>
      <td><strong>HTML Support</strong></td>
      <td>⚠️ Restricted <a href="#sec-note3">(click here for more info)</a></td>
      <td>✅ Extensive</td>
      <td>Embedding raw HTML within Markdown</td>
    </tr>
  </tbody>
</table>
```

### Features Only in GitHub Markdown {#sec-github-features}

```{=html}
<table class="table">
  <thead>
    <tr>
      <th>Feature</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Auto-linking</strong></td>
      <td>Automatically converts issue numbers, commit SHAs, and usernames to links</td>
    </tr>
    <tr>
      <td><strong>Emoji Shortcodes</strong></td>
      <td>Supports emoji codes like <code>:smile:</code></td>
    </tr>
    <tr>
      <td><strong>User Mentions</strong></td>
      <td>Supports <code>@username</code> mentions</td>
    </tr>
    <tr>
      <td><strong>Issue References</strong></td>
      <td>Links to issues with <code>#123</code></td>
    </tr>
    <tr>
      <td><strong>PR References</strong></td>
      <td>Links to pull requests with <code>#123</code></td>
    </tr>
    <tr>
      <td><strong>Commit References</strong></td>
      <td>Links to commits with SHA hashes</td>
    </tr>
  </tbody>
</table>
```

### Features Only in Quarto Markdown {#sec-quarto-features}

```{=html}
<table class="table">
  <thead>
    <tr>
      <th>Feature</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Code Execution</strong></td>
      <td>Can execute code chunks and display results inline</td>
    </tr>
    <tr>
      <td><strong>Multiple Languages</strong></td>
      <td>Supports multiple programming languages in one document</td>
    </tr>
    <tr>
      <td><strong>Citations</strong></td>
      <td>BibTeX/CSL integration for academic referencing</td>
    </tr>
    <tr>
      <td><strong>Cross-references</strong></td>
      <td>References to figures, tables, sections, and equations</td>
    </tr>
    <tr>
      <td><strong>Multi-format Output</strong></td>
      <td>Publishes to PDF, HTML, DOCX, presentations</td>
    </tr>
    <tr>
      <td><strong>Callouts/Admonitions</strong></td>
      <td>Special highlighted boxes for notes, warnings, tips</td>
    </tr>
    <tr>
      <td><strong>Tabsets</strong></td>
      <td>Tab interfaces for organizing content</td>
    </tr>
    <tr>
      <td><strong>Layout Options</strong></td>
      <td>Column layouts, panel arrangements, page breaks</td>
    </tr>
    <tr>
      <td><strong>Execution Options</strong></td>
      <td>Control over code visibility, evaluation, and caching</td>
    </tr>
  </tbody>
</table>
```

## Feature Examples Table {#sec-examples-table}

```{=html}
<table class="table">
  <thead>
    <tr>
      <th>Feature</th>
      <th>GitHub Markdown Example</th>
      <th>Quarto (.qmd) Example</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>YAML Front Matter</strong></td>
      <td>
<pre>---
title: Document Title
---</pre>
      </td>
      <td>
<pre>---
title: "Document Title"
author: "Author Name"
date: "2023-01-15"
format: 
  html:
    toc: true
    code-fold: true
  pdf:
    geometry: margin=1in
bibliography: references.bib
---</pre>
      </td>
    </tr>
    <tr>
      <td><strong>Code Blocks</strong></td>
      <td>
<pre>```python
def hello_world():
    print("Hello, world!")
```</pre>
      </td>
      <td>
<pre>```{python}
#| label: fig-scatter
#| fig-cap: "A scatter plot"
#| echo: false

import matplotlib.pyplot as plt
import seaborn as sns

mpg = sns.load_dataset("mpg")
sns.scatterplot(data=mpg, 
                x="horsepower", y="mpg")
```</pre>
      </td>
    </tr>
    <tr>
      <td><strong>Math Notation</strong></td>
      <td>
<pre>When $a \ne 0$, there are two 
solutions to $ax^2 + bx + c = 0$:
$x = {-b \pm \sqrt{b^2-4ac} \over 2a}$</pre>
      </td>
      <td>
<pre>When $a \ne 0$, there are two 
solutions to $ax^2 + bx + c = 0$:

$$x = {-b \pm \sqrt{b^2-4ac} 
\over 2a}$$ {#eq-quadratic}

As shown in @eq-quadratic...</pre>
      </td>
    </tr>
    <tr>
      <td><strong>Citations</strong></td>
      <td>Not supported natively</td>
      <td>
<pre>According to @smith2020, the 
analysis shows significant results.

# References {.unnumbered}</pre>
      </td>
    </tr>
    <tr>
      <td><strong>Task Lists</strong></td>
      <td>
<pre>- [x] Complete documentation
- [ ] Write tests
- [ ] Deploy to production</pre>
      </td>
      <td>
<pre>::: {.task-list}
- [x] Complete documentation
- [ ] Write tests
- [ ] Deploy to production
:::

<!-- Quarto has basic support but lacks 
GitHub's issue integration and automatic 
task tracking features --></pre>
      </td>
    </tr>
    <tr>
      <td><strong>Auto-linking</strong></td>
      <td>
<pre>See issue #42 for details.
@username can you review this?
See commit 8a3f79e for the fix.</pre>
      </td>
      <td>Not supported natively</td>
    </tr>
    <tr>
      <td><strong>Cross-references</strong></td>
      <td>Not supported natively</td>
      <td>
<pre>See @fig-scatter for the visualization.

As shown in @sec-methods and 
@tbl-results, the approach works.</pre>
      </td>
    </tr>
    <tr>
      <td><strong>Callouts/Admonitions</strong></td>
      <td>Not supported natively</td>
      <td>
<pre>::: {.callout-note}
This is an important note.
:::

::: {.callout-warning}
Warning: Proceed with caution!
:::</pre>
      </td>
    </tr>
    <tr>
      <td><strong>Tabsets</strong></td>
      <td>Not supported natively</td>
      <td>
<pre>::: {.panel-tabset}
### Tab A
Content for tab A

### Tab B
Content for tab B
:::</pre>
      </td>
    </tr>
    <tr>
      <td><strong>Column Layout</strong></td>
      <td>Not supported natively</td>
      <td>
<pre>:::: {.columns}
::: {.column width="40%"}
Left column content
:::
::: {.column width="60%"}
Right column content
:::
::::</pre>
      </td>
    </tr>
  </tbody>
</table>
```

## Potential Conflicts Table {#sec-conflicts}

```{=html}
<table class="table">
  <thead>
    <tr>
      <th>Element</th>
      <th>GitHub Markdown</th>
      <th>Quarto (.qmd)</th>
      <th>Potential Issue</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Code Blocks</strong></td>
      <td><code>```python</code></td>
      <td><code>```{python}</code> with options</td>
      <td>Code blocks from one system may not execute in the other</td>
    </tr>
    <tr>
      <td><strong>Table Formatting</strong></td>
      <td>Basic pipe tables</td>
      <td>Enhanced tables with options</td>
      <td>Complex tables may not render correctly across systems</td>
    </tr>
    <tr>
      <td><strong>Heading IDs</strong></td>
      <td>Auto-generated</td>
      <td>Can be explicitly set with <code>{#id}</code></td>
      <td>Links to headings may break when moving between systems</td>
    </tr>
    <tr>
      <td><strong>Image Handling</strong></td>
      <td><code>![alt](src)</code></td>
      <td><code>![alt](src){width=50%}</code></td>
      <td>Image formatting options won't work in GitHub</td>
    </tr>
    <tr>
      <td><strong>Footnotes</strong></td>
      <td><code>[^1]</code> with note at bottom</td>
      <td>Similar but with more options</td>
      <td>Minor syntax differences may cause rendering issues</td>
    </tr>
    <tr>
      <td><strong>HTML Elements</strong></td>
      <td>Limited, sanitized</td>
      <td>More extensive support</td>
      <td>HTML that works in Quarto may be stripped in GitHub</td>
    </tr>
  </tbody>
</table>
```

## Self-Contained Example {#sec-example}

Here's how you might reference different sections of this document in Quarto:

As we can see in @sec-feature-tables, Quarto offers many capabilities that GitHub Markdown doesn't support.

The @sec-examples-table section demonstrates syntax differences between the two formats.

@sec-conflicts highlights potential issues when converting between formats.

## Notes and Details {#sec-notes}

### Note 1: Basic YAML Front Matter Support in GitHub {#sec-note1}

GitHub recognizes YAML front matter primarily for Jekyll integration. It supports basic metadata like title, description, and permalink, but lacks Quarto's extensive formatting controls, bibliography management, execution options, and multi-format configuration capabilities. 

In GitHub, YAML front matter is primarily used for Jekyll site generation, while in Quarto it controls virtually every aspect of document rendering and behavior.

<a href="#sec-both-features">[Return to table]</a>

### Note 2: Basic LaTeX Support in GitHub {#sec-note2}

GitHub's LaTeX support is implemented through MathJax and handles basic equations well, but lacks features such as equation numbering, cross-referencing of equations, alignment environments (like align, gather), and theorem environments. 

It also doesn't support LaTeX packages or custom commands that Quarto can handle through the full LaTeX engine it uses for PDF output.

<a href="#sec-both-features">[Return to table]</a>

### Note 3: Restricted HTML in GitHub {#sec-note3}

GitHub sanitizes HTML for security reasons, restricting certain tags (like `<script>`, `<style>`, some `<iframe>` usages) and attributes (especially JavaScript event handlers). Many advanced HTML features that work in Quarto will be stripped in GitHub. 

GitHub also doesn't support custom styling through CSS classes to the extent Quarto does. Quarto allows direct HTML integration with much fewer restrictions when generating HTML output.

<a href="#sec-both-features">[Return to table]</a>

### Note 4: Basic Task List Support in Quarto {#sec-note4}

While Quarto does support task lists with checkbox syntax, GitHub's implementation is more feature-rich and integrated with its platform capabilities:

1. **GitHub Task List Features:**
   - Integration with GitHub Issues and Pull Requests
   - Interactive checkboxes that can be toggled directly in the interface
   - Automatic task tracking and progress reporting
   - Task assignment and project management integration
   - Notifications when tasks are completed

2. **Quarto Task List Limitations:**
   - Primarily for display purposes
   - No interactive toggling in standard output formats
   - Lacks integration with project management systems
   - No automatic tracking or status updates
   - Requires a div container with the `.task-list` class for proper rendering

Quarto's task lists are functionally static in most output formats, while GitHub's implementation provides a more interactive, workflow-oriented experience.

<a href="#sec-both-features">[Return to table]</a>
